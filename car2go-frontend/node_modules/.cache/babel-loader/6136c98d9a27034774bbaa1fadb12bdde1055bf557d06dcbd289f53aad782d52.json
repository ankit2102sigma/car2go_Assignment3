{"ast":null,"code":"import CryptoJS from 'crypto-js';\nconst key = 'my-secret-key'; // replace with your own secret key\n\nexport function encryptId(id) {\n  return CryptoJS.AES.encrypt(id, key).toString();\n}\nexport function decryptId(ciphertext) {\n  if (!ciphertext) {\n    console.error('Ciphertext is null or undefined');\n    return null; // or throw an error\n  }\n\n  try {\n    const bytes = CryptoJS.AES.decrypt(ciphertext, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  } catch (error) {\n    console.error('Error decrypting ciphertext:', error);\n    return null; // or throw an error\n  }\n}","map":{"version":3,"names":["CryptoJS","key","encryptId","id","AES","encrypt","toString","decryptId","ciphertext","console","error","bytes","decrypt","enc","Utf8"],"sources":["/var/www/html/Car2Go/car2go-frontend/src/salting.js"],"sourcesContent":["import CryptoJS from 'crypto-js';\n\nconst key = 'my-secret-key'; // replace with your own secret key\n\nexport function encryptId(id) {\n  return CryptoJS.AES.encrypt(id, key).toString();\n}\n\nexport function decryptId(ciphertext) {\n  if (!ciphertext) {\n    console.error('Ciphertext is null or undefined');\n    return null; // or throw an error\n  }\n  try {\n    const bytes = CryptoJS.AES.decrypt(ciphertext, key);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  } catch (error) {\n    console.error('Error decrypting ciphertext:', error);\n    return null; // or throw an error\n  }\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAEhC,MAAMC,GAAG,GAAG,eAAe,CAAC,CAAC;;AAE7B,OAAO,SAASC,SAASA,CAACC,EAAE,EAAE;EAC5B,OAAOH,QAAQ,CAACI,GAAG,CAACC,OAAO,CAACF,EAAE,EAAEF,GAAG,CAAC,CAACK,QAAQ,EAAE;AACjD;AAEA,OAAO,SAASC,SAASA,CAACC,UAAU,EAAE;EACpC,IAAI,CAACA,UAAU,EAAE;IACfC,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;IAChD,OAAO,IAAI,CAAC,CAAC;EACf;;EACA,IAAI;IACF,MAAMC,KAAK,GAAGX,QAAQ,CAACI,GAAG,CAACQ,OAAO,CAACJ,UAAU,EAAEP,GAAG,CAAC;IACnD,OAAOU,KAAK,CAACL,QAAQ,CAACN,QAAQ,CAACa,GAAG,CAACC,IAAI,CAAC;EAC1C,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI,CAAC,CAAC;EACf;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}